package com.example.tests;

import io.appium.java_client.android.AndroidDriver;
import org.openqa.selenium.remote.DesiredCapabilities;
import org.testng.SkipException;
import org.testng.annotations.Test;

import java.io.BufferedReader;
import java.io.InputStreamReader;
import java.net.URL;
import java.util.Arrays;
import java.util.List;

public class UniversalAppOpenTest {

    @Test(description = "Открывает любое установленное приложение на устройстве и логирует процесс")
    public void openAnyInstalledApp() {
        String deviceName = getDeviceName();
        String foundPackage = null;
        String foundActivity = null;
        System.out.println("[UniversalAppOpenTest] Поиск установленных приложений...");
        try {
            // Получаем список всех установленных пакетов
            Process proc = Runtime.getRuntime().exec("adb shell pm list packages");
            BufferedReader reader = new BufferedReader(new InputStreamReader(proc.getInputStream()));
            String line;
            while ((line = reader.readLine()) != null) {
                String pkg = line.replace("package:", "").trim();
                String activity = getMainActivity(pkg);
                System.out.println("[UniversalAppOpenTest] Найден пакет: " + pkg + (activity != null ? (" с main activity: " + activity) : " (main activity не найден)"));
                if (activity != null) {
                    foundPackage = pkg;
                    foundActivity = activity;
                    break;
                }
            }
        } catch (Exception e) {
            System.out.println("[UniversalAppOpenTest] Ошибка при поиске приложений: " + e.getMessage());
            throw new SkipException("Ошибка при поиске приложений: " + e.getMessage());
        }
        if (foundPackage == null || foundActivity == null) {
            System.out.println("[UniversalAppOpenTest] Не удалось найти ни одного установленного приложения с main activity.");
            throw new SkipException("Не удалось найти ни одного установленного приложения с main activity.");
        }
        System.out.println("[UniversalAppOpenTest] Пытаюсь открыть: " + foundPackage + "/" + foundActivity);
        try {
            DesiredCapabilities caps = new DesiredCapabilities();
            caps.setCapability("platformName", "Android");
            caps.setCapability("automationName", "UiAutomator2");
            caps.setCapability("deviceName", deviceName);
            caps.setCapability("appPackage", foundPackage);
            caps.setCapability("appActivity", foundActivity);
            AndroidDriver driver = new AndroidDriver(new URL("http://127.0.0.1:4723/wd/hub"), caps);
            System.out.println("[UniversalAppOpenTest] Успешно открылось приложение: " + foundPackage + "/" + foundActivity);
            Thread.sleep(10000); // Даем пользователю увидеть открытое приложение
            // driver.quit(); // Не закрываем приложение сразу
        } catch (Exception e) {
            System.out.println("[UniversalAppOpenTest] Не удалось открыть приложение: " + foundPackage + "/" + foundActivity);
            e.printStackTrace(System.out);
            throw new SkipException("Не удалось открыть приложение: " + foundPackage + "/" + foundActivity + "\n" + e.getMessage());
        }
    }

    @Test(description = "Открывает приложение калькулятор на устройстве (любой из популярных)")
    public void openCalculatorApp() {
        String deviceName = getDeviceName();
        // Популярные калькуляторы
        String[][] calculators = new String[][]{
            {"com.sec.android.app.calculator", "com.sec.android.app.calculator.Calculator"}, // Samsung
            {"com.google.android.calculator", "com.android.calculator2.Calculator"}, // Google
            {"com.android.calculator2", "com.android.calculator2.Calculator"}, // AOSP
            {"com.miui.calculator", "com.miui.calculator.cal.CalculatorActivity"}, // Xiaomi
            {"com.oneplus.calculator", "com.oneplus.calculator.Calculator"} // OnePlus
        };
        String foundPackage = null;
        String foundActivity = null;
        for (String[] calc : calculators) {
            if (isPackageInstalled(calc[0])) {
                foundPackage = calc[0];
                foundActivity = calc[1];
                break;
            }
        }
        if (foundPackage == null) {
            System.out.println("[UniversalAppOpenTest] Не найдено ни одного калькулятора на устройстве.");
            throw new SkipException("Не найдено ни одного калькулятора на устройстве.");
        }
        System.out.println("[UniversalAppOpenTest] Пытаюсь открыть калькулятор: " + foundPackage + "/" + foundActivity);
        try {
            DesiredCapabilities caps = new DesiredCapabilities();
            caps.setCapability("platformName", "Android");
            caps.setCapability("automationName", "UiAutomator2");
            caps.setCapability("deviceName", deviceName);
            caps.setCapability("appPackage", foundPackage);
            caps.setCapability("appActivity", foundActivity);
            AndroidDriver driver = new AndroidDriver(new URL("http://127.0.0.1:4723/wd/hub"), caps);
            System.out.println("[UniversalAppOpenTest] Успешно открыт калькулятор: " + foundPackage + "/" + foundActivity);
            Thread.sleep(10000); // Даем пользователю увидеть открытый калькулятор
            // driver.quit();
        } catch (Exception e) {
            System.out.println("[UniversalAppOpenTest] Не удалось открыть калькулятор: " + foundPackage + "/" + foundActivity);
            e.printStackTrace(System.out);
            throw new SkipException("Не удалось открыть калькулятор: " + foundPackage + "/" + foundActivity + "\n" + e.getMessage());
        }
    }

    @Test(description = "Открывает приложение Яндекс.Музыка на устройстве")
    public void openYandexMusicApp() {
        String deviceName = getDeviceName();
        String appPackage = "com.yandex.music";
        String appActivity = "com.yandex.music.ui.activity.MainActivity";
        if (!isPackageInstalled(appPackage)) {
            System.out.println("[UniversalAppOpenTest] Яндекс.Музыка не установлена на устройстве.");
            throw new SkipException("Яндекс.Музыка не установлена на устройстве.");
        }
        System.out.println("[UniversalAppOpenTest] Пытаюсь открыть Яндекс.Музыка: " + appPackage + "/" + appActivity);
        try {
            DesiredCapabilities caps = new DesiredCapabilities();
            caps.setCapability("platformName", "Android");
            caps.setCapability("automationName", "UiAutomator2");
            caps.setCapability("deviceName", deviceName);
            caps.setCapability("appPackage", appPackage);
            caps.setCapability("appActivity", appActivity);
            AndroidDriver driver = new AndroidDriver(new URL("http://127.0.0.1:4723/wd/hub"), caps);
            System.out.println("[UniversalAppOpenTest] Успешно открыта Яндекс.Музыка!");
            Thread.sleep(10000); // Даем пользователю увидеть открытое приложение
            // driver.quit();
        } catch (Exception e) {
            System.out.println("[UniversalAppOpenTest] Не удалось открыть Яндекс.Музыка: " + appPackage + "/" + appActivity);
            e.printStackTrace(System.out);
            throw new SkipException("Не удалось открыть Яндекс.Музыка: " + appPackage + "/" + appActivity + "\n" + e.getMessage());
        }
    }

    // Получить main activity для пакета через adb
    private String getMainActivity(String pkg) {
        try {
            Process proc = Runtime.getRuntime().exec("adb shell cmd package resolve-activity --brief " + pkg);
            BufferedReader reader = new BufferedReader(new InputStreamReader(proc.getInputStream()));
            String line;
            while ((line = reader.readLine()) != null) {
                if (line.contains("/")) {
                    String[] parts = line.split("/");
                    if (parts.length == 2) {
                        return parts[1].trim();
                    }
                }
            }
        } catch (Exception e) {
            System.out.println("[UniversalAppOpenTest] Ошибка при получении main activity для " + pkg + ": " + e.getMessage());
        }
        return null;
    }

    private boolean isPackageInstalled(String pkg) {
        try {
            Process proc = Runtime.getRuntime().exec("adb shell pm list packages " + pkg);
            BufferedReader reader = new BufferedReader(new InputStreamReader(proc.getInputStream()));
            String line;
            while ((line = reader.readLine()) != null) {
                if (line.contains(pkg)) return true;
            }
        } catch (Exception ignored) {}
        return false;
    }

    private String getDeviceName() {
        try {
            Process proc = Runtime.getRuntime().exec("adb devices");
            BufferedReader reader = new BufferedReader(new InputStreamReader(proc.getInputStream()));
            String line;
            while ((line = reader.readLine()) != null) {
                if (line.endsWith("\tdevice")) {
                    return line.split("\t")[0];
                }
            }
        } catch (Exception ignored) {}
        return "Android Device";
    }
} 